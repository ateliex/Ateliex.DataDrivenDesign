// <auto-generated />
using System;
using Ateliex.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ateliex.Data.Migrations
{
    [DbContext(typeof(AteliexDbContext))]
    partial class AteliexDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ateliex.Areas.Cadastro.Models.Modelo", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Codigo");

                    b.ToTable("Modelo", "cadastro");

                    b.HasData(
                        new
                        {
                            Codigo = "TM01",
                            Nome = "Tati Model 01"
                        },
                        new
                        {
                            Codigo = "TM02",
                            Nome = "Tati Model 02"
                        },
                        new
                        {
                            Codigo = "TM03",
                            Nome = "Tati Model 03"
                        },
                        new
                        {
                            Codigo = "TM04",
                            Nome = "Tati Model 04"
                        },
                        new
                        {
                            Codigo = "TM05",
                            Nome = "Tati Model 05"
                        },
                        new
                        {
                            Codigo = "TM06",
                            Nome = "Tati Model 06"
                        },
                        new
                        {
                            Codigo = "TM07",
                            Nome = "Tati Model 07"
                        },
                        new
                        {
                            Codigo = "TM08",
                            Nome = "Tati Model 08"
                        },
                        new
                        {
                            Codigo = "TM09",
                            Nome = "Tati Model 09"
                        },
                        new
                        {
                            Codigo = "TM10",
                            Nome = "Tati Model 10"
                        });
                });

            modelBuilder.Entity("Ateliex.Areas.Cadastro.Models.ModeloRecurso", b =>
                {
                    b.Property<string>("ModeloCodigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Custo")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.Property<int>("Unidades")
                        .HasColumnType("int");

                    b.HasKey("ModeloCodigo", "Id");

                    b.HasIndex("TipoId");

                    b.ToTable("ModeloRecurso", "cadastro");

                    b.HasData(
                        new
                        {
                            ModeloCodigo = "TM01",
                            Id = 1,
                            Custo = 20m,
                            Descricao = "Tecido",
                            TipoId = 1,
                            Unidades = 2
                        },
                        new
                        {
                            ModeloCodigo = "TM01",
                            Id = 2,
                            Custo = 4m,
                            Descricao = "Linha",
                            TipoId = 1,
                            Unidades = 20
                        },
                        new
                        {
                            ModeloCodigo = "TM01",
                            Id = 3,
                            Custo = 5m,
                            Descricao = "Outros",
                            TipoId = 1,
                            Unidades = 1
                        },
                        new
                        {
                            ModeloCodigo = "TM01",
                            Id = 4,
                            Custo = 100m,
                            Descricao = "Transporte",
                            TipoId = 2,
                            Unidades = 50
                        },
                        new
                        {
                            ModeloCodigo = "TM01",
                            Id = 5,
                            Custo = 5m,
                            Descricao = "Costureira",
                            TipoId = 3,
                            Unidades = 1
                        });
                });

            modelBuilder.Entity("Ateliex.Areas.Cadastro.Models.ModeloRecursoTipo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("ModeloRecursoTipo", "cadastro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Material"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Transporte"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Humano"
                        });
                });

            modelBuilder.Entity("Ateliex.Areas.Comercial.Models.PlanoComercial", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RendaBrutaMensal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Codigo");

                    b.ToTable("PlanoComercial", "comercial");

                    b.HasData(
                        new
                        {
                            Codigo = "PC01.A",
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Normal",
                            RendaBrutaMensal = 6000m
                        },
                        new
                        {
                            Codigo = "PC01.B",
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Moderado",
                            RendaBrutaMensal = 0m
                        },
                        new
                        {
                            Codigo = "PC01.C",
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Ousado",
                            RendaBrutaMensal = 0m
                        });
                });

            modelBuilder.Entity("Ateliex.Areas.Comercial.Models.PlanoComercialCusto", b =>
                {
                    b.Property<string>("PlanoComercialCodigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PlanoComercialCodigo", "Id");

                    b.ToTable("PlanoComercialCusto", "comercial");

                    b.HasData(
                        new
                        {
                            PlanoComercialCodigo = "PC01.A",
                            Id = 1,
                            Descricao = "Prolabore",
                            Percentual = 0m,
                            Tipo = 0,
                            Valor = 1000m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.A",
                            Id = 2,
                            Descricao = "Aluguel",
                            Percentual = 0m,
                            Tipo = 0,
                            Valor = 900m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.A",
                            Id = 3,
                            Descricao = "Cartão",
                            Percentual = 10m,
                            Tipo = 1,
                            Valor = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.A",
                            Id = 4,
                            Descricao = "Comissão",
                            Percentual = 10m,
                            Tipo = 1,
                            Valor = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.A",
                            Id = 5,
                            Descricao = "Perda",
                            Percentual = 2m,
                            Tipo = 1,
                            Valor = 0m
                        });
                });

            modelBuilder.Entity("Ateliex.Areas.Comercial.Models.PlanoComercialItem", b =>
                {
                    b.Property<string>("PlanoComercialCodigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModeloCodigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Margem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MargemPercentual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrecoDeVendaDesejado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal?>("TaxaDeMarcacaoSugerida")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PlanoComercialCodigo", "ModeloCodigo");

                    b.HasIndex("ModeloCodigo");

                    b.ToTable("PlanoComercialItem", "comercial");

                    b.HasData(
                        new
                        {
                            PlanoComercialCodigo = "PC01.A",
                            ModeloCodigo = "TM01",
                            Margem = 0m,
                            MargemPercentual = 1.93m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.A",
                            ModeloCodigo = "TM02",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.A",
                            ModeloCodigo = "TM03",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.A",
                            ModeloCodigo = "TM10",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.B",
                            ModeloCodigo = "TM01",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.B",
                            ModeloCodigo = "TM02",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.B",
                            ModeloCodigo = "TM03",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.B",
                            ModeloCodigo = "TM04",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.B",
                            ModeloCodigo = "TM05",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.B",
                            ModeloCodigo = "TM06",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.B",
                            ModeloCodigo = "TM07",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.B",
                            ModeloCodigo = "TM08",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.B",
                            ModeloCodigo = "TM09",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.B",
                            ModeloCodigo = "TM10",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.C",
                            ModeloCodigo = "TM05",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.C",
                            ModeloCodigo = "TM06",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.C",
                            ModeloCodigo = "TM07",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.C",
                            ModeloCodigo = "TM08",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.C",
                            ModeloCodigo = "TM09",
                            Margem = 0m,
                            MargemPercentual = 0m
                        },
                        new
                        {
                            PlanoComercialCodigo = "PC01.C",
                            ModeloCodigo = "TM10",
                            Margem = 0m,
                            MargemPercentual = 0m
                        });
                });

            modelBuilder.Entity("Ateliex.Areas.Cadastro.Models.ModeloRecurso", b =>
                {
                    b.HasOne("Ateliex.Areas.Cadastro.Models.Modelo", "Modelo")
                        .WithMany("Recursos")
                        .HasForeignKey("ModeloCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ateliex.Areas.Cadastro.Models.ModeloRecursoTipo", "Tipo")
                        .WithMany("Recursos")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modelo");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Ateliex.Areas.Comercial.Models.PlanoComercialCusto", b =>
                {
                    b.HasOne("Ateliex.Areas.Comercial.Models.PlanoComercial", "PlanoComercial")
                        .WithMany("Custos")
                        .HasForeignKey("PlanoComercialCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanoComercial");
                });

            modelBuilder.Entity("Ateliex.Areas.Comercial.Models.PlanoComercialItem", b =>
                {
                    b.HasOne("Ateliex.Areas.Cadastro.Models.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ateliex.Areas.Comercial.Models.PlanoComercial", "PlanoComercial")
                        .WithMany("Itens")
                        .HasForeignKey("PlanoComercialCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modelo");

                    b.Navigation("PlanoComercial");
                });

            modelBuilder.Entity("Ateliex.Areas.Cadastro.Models.Modelo", b =>
                {
                    b.Navigation("Recursos");
                });

            modelBuilder.Entity("Ateliex.Areas.Cadastro.Models.ModeloRecursoTipo", b =>
                {
                    b.Navigation("Recursos");
                });

            modelBuilder.Entity("Ateliex.Areas.Comercial.Models.PlanoComercial", b =>
                {
                    b.Navigation("Custos");

                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
